base_throw_trajectory{
  _use:t="arc_trajectory"

  "trajectory__enabled:b"{
    value:b=no
    _hide:b=yes
  }

  "trajectory__start:p3"{
    value:p3=0, 0, 0
    _hide:b=yes
  }

  "trajectory__vel:p3"{
    value:p3=0, 1, 0
    _hide:b=yes
  }

  "trajectory__gravity_dir:p3"{
    value:p3=0, -1, 0
    _hide:b=yes
  }

  "trajectory__time:r"{
    value:r=0.2
    _hide:b=yes
  }

  "trajectory__color_gamma:r"{
    value:r=1.5
    _hide:b=yes
  }

  "trajectory__center:c"{
    value:c=100, 0, 0, 90
    _hide:b=yes
  }

  "trajectory__border:c"{
    value:c=0, 0, 0, 0
    _hide:b=yes
  }

  "trajectory__wide_start:r"{
    value:r=0.15
    _hide:b=yes
  }

  "trajectory__wide_end:r"{
    value:r=0.07
    _hide:b=yes
  }
}

killer_outline{
  outline__enabled:b=no
  outline__color:c=255, 0, 0, 255
  outline__disableAtTime:r=-1
  outline__always_visible:b=no

  _group{
    _tags:t="render"
    killer_outline__enabled:b=no
    killer_outline__color:c=200, 0, 0, 255
    killer_outline__timeout:r=0
  }
}

teammate_outline{
  teammate_outline__color:c=100, 100, 200, 255
  outline__enabled:b=no
  outline__z_fail:b=yes
  outline__frames_visible:i=0
}

human_backstab{
  backstab__angleCosLimit:r=0.55
  backstab__maxPlaneDist:r=0.6
  backstab__maxHeightDiff:r=0.65
  backstab__offenderDmgMult:r=2.5
  backstab__victimDmgMult:r=1
  backstab__nodeName:t="Bip01 Neck"
  backstab__nodeIdx:i=-1
  backstab__maxVictimHeadArmor:r=0.05
  backstab__headArmor:r=0
  _replicated:t="backstab__headArmor"
}

base_cover_updater{
  humanVisibleCoversMap{
    _tags:t="server"
  }

  _group{
    _tags:t="server"
    cover_updater__nextUpdateTime:r=-1
    cover_updater__deltaTime:r=1
    cover_updater__lengthSqForcedUpdate:r=100
    cover_updater__lengthSqNotUpdatable:r=0.1
    cover_updater__cleanerTresholdSq:r=100
    cover_updater__prevPosition:p3=0, 0, 0
    cover_updater__maxRadius:r=40
    cover_updater__nearRadius:r=0.5
    cover_updater__dirCheck:r=90
  }
}

human_cover_updater{
  _use:t="base_cover_updater"

  _group{
    _tags:t="server"

    "cover_updater__heldCovers:list<ip2>"{}
  }
}

base_human_ai{
  _replicated:t="ai_target__invisibleTimeTo"
  ai_target__invisibleTimeTo:r=0
  ai_target__bulletInvisibleDist:r=40
  ai_target_node__node:t="Bip01 Spine1"
  ai_target__noiseLevel:r=0

  ai_target{
    _tags:t="server"
  }

  "ai_target_node__nodeId:i"{
    value:i=-1
    _tags:t="server"
  }
}

human_weap{
  _use:t="base_human_weap"
  _use:t="human_backstab"
  trajectory__startNodeName:t="Bip01 Spine1"
  trajectory__startNodeIdx:i=-1

  "human_weap:tag"{}
}

human_freefall{
  human_freefall__isFreefall:b=no
  human_freefall__canFreefall:b=yes
  human_freefall__minPlaneHeight:r=30
  human_freefall__vertLookAngleLimit:p2=-72, 25
  human_freefall__criticalAirSpeed:r=30
  human_freefall__airResistance:r=0.0039
  human_freefall__animationTemplate:t="human_freefall_animation"
  _tracked:t="human_freefall__isFreefall"
  _replicated:t="human_freefall__isFreefall"
  _replicated:t="human_freefall__criticalAirSpeed"
  _replicated:t="human_freefall__airResistance"

  "human_freefall__gameEffect:eid"{}
}

shooter_human{
  _use:t="base_human_ai"
  _use:t="human_weap"
  _use:t="human"
  _use:t="battle_areas_visitor"
  _use:t="base_burning"
  battle_area__timeToDamageType:t="human"
  soldier__id:i=-1
  requestAmmoAllowTime:r=0
  _replicated:t="requestAmmoAllowTime"

  _group{
    _track:b=yes
    _replicate:b=yes
  }

  "ammoProtoToTemplateMap:object"{
    _tags:t="server"
  }
}

shooter_input{
  _use:t="human_weapon_input"
  _use:t="human_grenade_input"
}

offender_marks{
  offender_marks__enabled:b=no
  offender_marks__showOnlyLast:b=no
  offender_marks__updateOffenderPos:b=yes
  offender_marks__showTime:r=5

  "offender_marks:array"{}
}

human_parachute_control_effect{
  _use:t="replicating"
  human_parachute__aiDeployHeight:r=360
  human_parachute__playerDeployHeight:r=0
  human_parachute__autoDeployHeight:r=150
  human_parachute__minDeployHeight:r=40
  human_parachute__minDeployVelocity:r=10
  human_parachute__hideWeaponAffectTemplate:t="human_parachute_affect_hide_weapon"
  human_parachute__maxFallSpeed:r=6
  human_parachute__deployTime:r=4
  human_parachute__deployedAtTime:r=0
  human_parachute__closedAtTime:r=0
  _tracked:t="human_parachute__deployedAtTime"
  _replicated:t="human_parachute__deployedAtTime"
  _tracked:t="human_parachute__closedAtTime"
  _replicated:t="human_parachute__closedAtTime"
  human_parachute__canDeploy:b=no
  human_parachute__isDeployed:b=no
  _tracked:t="human_parachute__isDeployed"
  _replicated:t="human_parachute__isDeployed"

  "parachuteControlEffect:tag"{}
  "human_parachute_control_effect__attachedTo:eid"{}
  _group{
    _tags:t="gameClient"
    human_parachute__effectTemplate:t="human_parachute_effect"

    "human_parachute_effect__eid:eid"{}
  }

  "human_parachute__hideWeaponAffectEid:eid"{}
}

human_parachute_effect{
  _use:t="human_parachute_effect_sound"
  human_parachute_anim__deployedAtTime:r=0
  human_parachute_anim__closedAtTime:r=0
  human_parachute_anim__openDuration:r=1.7
  human_parachute_anim__closeDuration:r=1
  human_parachute_anim__openAtTime:r=0
  human_parachute_anim__closeAtTime:r=0
  human_parachute__parachuteTemplate:t="parachute_canopy_item"
  human_parachute_effect__isOpened:b=no
  _tracked:t="human_parachute_effect__isOpened"
  human_parachute_anim__currentState:i=-1
  _tracked:t="human_parachute_anim__currentState"

  "human_parachute_effect__attachedTo:eid"{}
  "human_parachute_anim__currentEffect:eid"{}
  "human_parachute__eid:eid"{}
}

parachute{
  parachute_anim__closedState:t="parachute_free_fly"
  parachute_anim__openedState:t="parachute_cycle"
  parachute_anim__closedStateId:i=-1
  parachute_anim__openedStateId:i=-1
  parachute_anim__closingState:t="parachute_landing"
  parachute_anim__openingState:t="parachute_open"
  parachute_anim__closingStateId:i=-1
  parachute_anim__openingStateId:i=-1
  parachute_anim__lastDeployState:b=no
  parachute_anim__openDuration:r=1.7
  parachute_anim__closeDuration:r=1
  parachute_anim__openedAtTime:r=0
  parachute_anim__closedAtTime:r=0
  parachute_anim__isOpened:b=no

  "parachute:tag"{}
}

attachable_parachute_canopy{
  _use:t="attachable_wear"

  "item__equipmentSlots:list<t>"{
    slot:t="parachute_canopy"
  }
}

parachute_canopy_item{
  _use:t="attachable_parachute_canopy"
  _use:t="parachute"
  animchar__updatable:b=yes
  animchar_attaches__disableAnimDistance:r=1000
  animchar__res:t="parachute_char"
  collres__res:t="parachute_collision"
  item__name:t="items/parachute_dome"

  "animchar_attaches__animated:tag"{}
}
