repeat{
  name:t="invisible_man_teaser"

  success{
    sequencer{
      once{}
      wait{
        range:p2=2, 2.5
        resetable:b=yes
      }

      subTree{
        treeName:t="sub.invisible_man_teaser_go_to_invisible_form"
      }

      wait{
        range:p2=0.75, 1.5
        resetable:b=yes
      }
    }
  }

  utilitySelector{
    utilVars{
      updateTimeStep:r=0.05
      ready:t="util_vars__ready"
      var:t="util_vars__aggressionLevel"
      var:t="util_vars__visibleTargets"
      var:t="util_vars__inAttackState"
      var:t="util_vars__inShowState"
      var:t="util_vars__visibleAttractPoints"
      var:t="util_vars__attractPointRatio"
    }

    sequencer{
      name:t="patrol_or_vanish"
      utilFn:t="0.25f / (1f + visibleTargets)"

      not{
        checkAlive{
          targetParam:t="invisible_man__mainEnemyEid"
        }
      }

      sequencer{
        name:t="patrol"

        subTree{
          treeName:t="sub.invisible_man_teaser_go_to_invisible_form"
        }

        patrollerWithNavmeshMapping{}
        parallel{
          nPhysCorridorMoveToPos{
            posParam:t="patroller__currentWaypoint"
            forceToWalk:b=yes
            sprintTimerRange:p2=0, 0
            stopDist:r=0.8
          }

          wait{
            range:p2=5, 10
            resetable:b=yes
          }
        }

        orderedSelector{
          sequencer{
            name:t="Hunter wait"

            compareNode{
              lhs:t="invisible_man__type"
              operator:t="=="
              rhs:i=0
            }

            wait{
              range:p2=5, 10
              resetable:b=yes
            }
          }

          sequencer{
            name:t="Guard wait"

            compareNode{
              lhs:t="invisible_man__type"
              operator:t="=="
              rhs:i=1
            }

            wait{
              range:p2=0, 3
              resetable:b=yes
            }
          }
        }
      }

      success{
        sequencer{
          name:t="vanish"

          compareNode{
            lhs:t="invisible_man__type"
            operator:t="=="
            rhs:i=0
          }

          not{
            checkAlive{
              targetParam:t="invisible_man__mainEnemyEid"
            }
          }

          not{
            findDanger{
              paramName:t="enemy"
              radiusParamName:t="enemyRadius"
              minDanger:r=0.1
              tag:t="human"
            }
          }

          subTree{
            treeName:t="sub.invisible_man_teaser_vanish"
          }
        }
      }
    }

    exitHandler{
      name:t="attack"
      utilFn:t="visibleTargets * (1f + saturate(aggressionLevel - 0.4999))"
      canExitFn:t="inAttackState ? 0. : (inShowState ? 0. : 1.)"

      orderedSelector{
        sequencer{
          name:t="force_vanish"

          compareNode{
            lhs:t="invisible_man__forceVanish"
            operator:t="=="
            rhs:i=1
          }

          subTree{
            treeName:t="sub.invisible_man_teaser_vanish"
          }
        }

        sequencer{
          name:t="hunt"

          subTree{
            treeName:t="sub.invisible_man_teaser_find_danger"
          }

          compareNode{
            lhs:t="invisible_man__type"
            operator:t="=="
            rhs:i=0
          }

          not{
            checkDistanceToTarget{
              targetParam:t="walker_agent__targetEid"
              radius:r=20
            }
          }

          orderedSelector{
            sequencer{
              checkDistanceToTarget{
                targetParam:t="walker_agent__targetEid"
                radius:r=45
              }
            }

            sequencer{
              subTree{
                treeName:t="sub.invisible_man_teaser_vanish"
              }
            }
          }

          parallel{
            nPhysCorridorMoveToTarget{
              targetParam:t="walker_agent__targetEid"
              forceToWalk:b=no
              stopDist:r=1
            }

            wait{
              range:p2=5, 10
              resetable:b=yes
            }
          }
        }

        sequencer{
          name:t="backstab_attack"

          compareNode{
            lhs:t="invisible_man__forceForwardAttack"
            operator:t="=="
            rhs:i=0
          }

          subTree{
            treeName:t="sub.invisible_man_teaser_find_danger"
          }

          repeatUntilFail{
            count:i=3

            nMeshFindDirectionalPointNearTarget{
              posParam:t="walker_agent__targetPos"
              tries:i=2
              dist:p2=1.5, 2
              targetParam:t="walker_agent__targetEid"
              tracerayNavmesh:b=yes
              directionAngle:r=180
              angleRangeSpread:p2=-30, 30
            }

            success{
              sequencer{
                not{
                  checkInsideAnotherDimension{
                    targetParam:t="walker_agent__targetEid"
                  }
                }

                subTree{
                  treeName:t="sub.invisible_man_teaser_run_behind_target"
                }

                nPhysLookAtEntity{
                  targetParam:t="walker_agent__targetEid"
                }

                subTree{
                  treeName:t="sub.invisible_man_teaser_go_to_visible_form"
                }

                parallel{
                  nPhysStareAtEntity{
                    targetParam:t="walker_agent__targetEid"
                  }

                  wait{
                    range:p2=0.05, 0.25
                    resetable:b=yes
                  }
                }

                subTree{
                  treeName:t="sub.invisible_man_teaser_try_backstab_attack"
                }

                success{
                  sequencer{
                    ignoreChance{
                      chance:r=0.85
                    }

                    subTree{
                      treeName:t="sub.invisible_man_teaser_try_backstab_attack"
                    }
                  }
                }

                parallel{
                  nPhysStareAtEntity{
                    targetParam:t="walker_agent__targetEid"
                  }

                  wait{
                    range:p2=0.2, 0.3
                    resetable:b=yes
                  }
                }

                sequencer{
                  ignoreChance{
                    chance:r=0.1
                  }

                  subTree{
                    treeName:t="sub.invisible_man_teaser_go_to_invisible_form"
                  }
                }

                orderedSelector{
                  not{
                    amIsTargetLookingInMyDirection{
                      targetParam:t="walker_agent__targetEid"
                      sectorAngle:r=30
                    }
                  }

                  sequencer{
                    subTree{
                      treeName:t="sub.invisible_man_teaser_go_to_invisible_form"
                    }
                  }
                }

                parallel{
                  nPhysStareAtEntity{
                    targetParam:t="walker_agent__targetEid"
                  }

                  wait{
                    range:p2=0.2, 0.3
                    resetable:b=yes
                  }
                }

                orderedSelector{
                  not{
                    amIsTargetLookingInMyDirection{
                      targetParam:t="walker_agent__targetEid"
                      sectorAngle:r=30
                    }
                  }
                }

                subTree{
                  treeName:t="sub.invisible_man_teaser_go_to_invisible_form"
                }
              }
            }

            success{
              sequencer{
                ignoreChance{
                  chance:r=0.5
                }

                subTree{
                  treeName:t="sub.invisible_man_teaser_walk_around"
                }
              }
            }

            checkTarget{
              targetUnitParam:t="enemy"
            }
          }
        }

        sequencer{
          name:t="forward_attack"

          subTree{
            treeName:t="sub.invisible_man_teaser_find_danger"
          }

          subTree{
            treeName:t="sub.invisible_man_teaser_go_to_invisible_form"
          }

          parallel{
            nPhysCorridorMoveToTarget{
              targetParam:t="walker_agent__targetEid"
              forceToWalk:b=no
              stopDist:r=1.2
            }

            sequencer{
              wait{
                range:p2=8, 14
                resetable:b=yes
              }

              failed{}
            }
          }

          subTree{
            treeName:t="sub.invisible_man_teaser_go_to_visible_form_fast"
          }

          parallel{
            nPhysStareAtEntity{
              targetParam:t="walker_agent__targetEid"
            }

            wait{
              range:p2=0.3, 0.4
              resetable:b=yes
            }
          }

          subTree{
            treeName:t="sub.invisible_man_teaser_try_forward_attack"
          }

          success{
            sequencer{
              ignoreChance{
                chance:r=0.75
              }

              subTree{
                treeName:t="sub.invisible_man_teaser_try_forward_attack"
              }
            }
          }

          subTree{
            treeName:t="sub.invisible_man_teaser_go_to_invisible_form"
          }

          parallel{
            nPhysStareAtEntity{
              targetParam:t="walker_agent__targetEid"
            }

            wait{
              range:p2=0.1, 0.3
              resetable:b=yes
            }
          }

          subTree{
            treeName:t="sub.invisible_man_teaser_run_around"
          }

          checkTarget{
            targetUnitParam:t="enemy"
          }
        }

        sequencer{
          name:t="shoo"

          subTree{
            treeName:t="sub.invisible_man_teaser_run_around"
          }

          wait{
            range:p2=0, 1.5
            resetable:b=yes
          }
        }
      }

      sequencer{
        modifyNode{
          target:t="util_vars__inAttackState"
          operator:t="="
          arg:i=0
        }

        modifyNode{
          target:t="util_vars__inShowState"
          operator:t="="
          arg:i=0
        }
      }
    }

    sequencer{
      name:t="runToVisibleAttrackPoint"
      utilFn:t="visibleAttractPoints > 0f ? 0.5 : 0f"

      not{
        subTree{
          treeName:t="sub.invisible_man_teaser_find_danger"
        }
      }

      getVisibleAttractionPosition{}
      nPhysCorridorMoveToPos{
        posParam:t="visual_attract__nearestNavPos"
        forceToWalk:b=no
        sprintTimerRange:p2=0, 0
      }

      wait{
        range:p2=1, 2
        resetable:b=yes
      }

      subTree{
        treeName:t="sub.invisible_man_teaser_patroll_around_attract_pos"
      }
    }

    sequencer{
      name:t="runToAttrackPoint"
      utilFn:t="attractPointRatio"

      not{
        subTree{
          treeName:t="sub.invisible_man_teaser_find_danger"
        }
      }

      orderedSelector{
        sequencer{
          compareNode{
            lhs:t="attract_point__distanceTime"
            operator:t=">="
            rhs:r=0.5
          }

          parallel{
            nPhysStareAtEntity{
              targetParam:t="attract_point__eid"
            }

            wait{
              range:p2=3, 6
              resetable:b=yes
            }
          }
        }

        sequencer{
          nPhysCorridorMoveToPos{
            posParam:t="attract_point__targetPos"
          }

          wait{
            range:p2=1, 2
            resetable:b=yes
          }

          subTree{
            treeName:t="sub.invisible_man_teaser_patroll_around_attract_pos"
          }
        }
      }
    }
  }
}

repeat{
  name:t="sub.invisible_man_teaser_patroll_around_attract_pos"
  count:i=4

  sequencer{
    ignoreChance{
      chance:r=0.5
    }

    subTree{
      treeName:t="sub.invisible_man_teaser_go_to_invisible_form"
    }

    nMeshFindRandomPointAroundPos{
      posParam:t="patroller__currentWaypoint"
      dist:p2=5, 7
      aroundPos:t="attract_point__targetPos"
    }

    randomSelector{
      nPhysCorridorMoveToPos{
        posParam:t="patroller__currentWaypoint"
      }

      nPhysCorridorMoveToPos{
        posParam:t="patroller__currentWaypoint"
        forceToWalk:b=yes
        sprintTimerRange:p2=0, 0
      }
    }

    wait{
      range:p2=1, 2
      resetable:b=yes
    }
  }
}

sequencer{
  name:t="sub.invisible_man_teaser_run_behind_target"

  sequencer{
    name:t="run_behind_target"

    sequencer{
      findDanger{
        paramName:t="enemy"
        radiusParamName:t="enemyRadius"
        minDanger:r=0.1
        tag:t="human"
      }

      modifyNode{
        target:t="walker_agent__targetEid"
        operator:t="="
        argIntParam:t="enemy"
      }
    }

    success{
      sequencer{
        subTree{
          treeName:t="sub.invisible_man_teaser_go_to_invisible_form"
        }

        amIsTargetLookingInMyDirection{
          targetParam:t="walker_agent__targetEid"
          sectorAngle:r=120
        }

        randomSelector{
          nMeshFindDirectionalPointNearTarget{
            posParam:t="walker_agent__targetPos"
            tries:i=2
            dist:p2=2.5, 5
            targetParam:t="walker_agent__targetEid"
            tracerayNavmesh:b=yes
            directionAngle:r=90
            angleRangeSpread:p2=-30, 30
          }

          nMeshFindDirectionalPointNearTarget{
            posParam:t="walker_agent__targetPos"
            tries:i=2
            dist:p2=2.5, 5
            targetParam:t="walker_agent__targetEid"
            tracerayNavmesh:b=yes
            directionAngle:r=-90
            angleRangeSpread:p2=-30, 30
          }

          sequencer{
            failed{}
          }
        }

        parallel{
          nPhysCorridorMoveToPos{
            posParam:t="walker_agent__targetPos"
            stopDist:r=0.25
          }

          wait{
            range:p2=3, 8
            resetable:b=yes
          }
        }

        not{
          amIsTargetLookingInMyDirection{
            targetParam:t="walker_agent__targetEid"
            sectorAngle:r=45
          }
        }

        sequencer{
          nMeshFindDirectionalPointNearTarget{
            posParam:t="walker_agent__targetPos"
            tries:i=2
            dist:p2=2.5, 5
            targetParam:t="walker_agent__targetEid"
            tracerayNavmesh:b=yes
            directionAngle:r=180
            angleRangeSpread:p2=-30, 30
          }
        }

        subTree{
          treeName:t="sub.invisible_man_teaser_go_to_invisible_form"
        }

        parallel{
          nPhysCorridorMoveToPos{
            posParam:t="walker_agent__targetPos"
            stopDist:r=0.25
          }

          wait{
            range:p2=3, 8
            resetable:b=yes
          }
        }
      }
    }

    not{
      amIsTargetLookingInMyDirection{
        targetParam:t="walker_agent__targetEid"
        sectorAngle:r=120
      }
    }

    sequencer{
      nMeshFindDirectionalPointNearTarget{
        posParam:t="walker_agent__targetPos"
        tries:i=2
        dist:p2=1.5, 2
        targetParam:t="walker_agent__targetEid"
        tracerayNavmesh:b=yes
        directionAngle:r=180
        angleRangeSpread:p2=-30, 30
      }
    }

    subTree{
      treeName:t="sub.invisible_man_teaser_go_to_invisible_form"
    }

    parallel{
      nPhysCorridorMoveToPos{
        posParam:t="walker_agent__targetPos"
        stopDist:r=0.25
      }

      wait{
        range:p2=3, 8
        resetable:b=yes
      }
    }
  }
}

sequencer{
  name:t="sub.invisible_man_teaser_find_danger"

  sequencer{
    name:t="find_danger"

    orderedSelector{
      sequencer{
        findDanger{
          paramName:t="enemy"
          radiusParamName:t="enemyRadius"
          minDanger:r=0.1
          tag:t="human"
        }

        modifyNode{
          target:t="walker_agent__targetEid"
          operator:t="="
          argIntParam:t="enemy"
        }
      }

      sequencer{
        not{
          checkInsideAnotherDimension{
            targetParam:t="invisible_man__mainEnemyEid"
          }
        }

        modifyNode{
          target:t="walker_agent__targetEid"
          operator:t="="
          arg:t="invisible_man__mainEnemyEid"
        }
      }
    }

    checkAlive{
      targetParam:t="walker_agent__targetEid"
    }
  }
}

success{
  name:t="sub.invisible_man_teaser_attack"

  sequencer{
    name:t="attack"

    modifyNode{
      target:t="util_vars__inAttackState"
      operator:t="="
      arg:i=1
    }

    success{
      sequencer{
        parallel{
          join{
            applyGameAffect{
              templateName:t="invisible_man_attack_anim"
              duration:p2=0.9, 1.1
            }

            applyGameAffect{
              templateName:t="invisible_man_attack"
              delay:p2=0.4, 0.46
            }

            applyGameAffect{
              templateName:t="invisible_man_attack"
              delay:p2=0.66, 0.76
            }
          }

          nPhysStareAtEntity{
            targetParam:t="walker_agent__targetEid"
          }
        }

        wait{
          range:p2=0.15, 0.5
          resetable:b=yes
        }
      }
    }

    modifyNode{
      target:t="util_vars__inAttackState"
      operator:t="="
      arg:i=0
    }
  }
}

success{
  name:t="sub.invisible_man_teaser_try_backstab_attack"

  sequencer{
    name:t="try_backstab_attack"

    sequencer{
      findDanger{
        paramName:t="enemy"
        radiusParamName:t="enemyRadius"
        minDanger:r=0.1
        tag:t="human"
      }

      modifyNode{
        target:t="walker_agent__targetEid"
        operator:t="="
        argIntParam:t="enemy"
      }
    }

    checkDistanceToTarget{
      targetParam:t="walker_agent__targetEid"
      radius:r=2
    }

    orderedSelector{
      not{
        amIsTargetLookingInMyDirection{
          targetParam:t="walker_agent__targetEid"
          sectorAngle:r=120
        }
      }

      sequencer{
        ignoreChance{
          chance:r=0.35
        }

        subTree{
          treeName:t="sub.invisible_man_teaser_try_forward_attack"
        }

        failed{}
      }

      sequencer{
        ignoreChance{
          chance:r=0.35
        }

        failed{}
      }
    }

    not{
      checkInsideAnotherDimension{
        targetParam:t="walker_agent__targetEid"
      }
    }

    subTree{
      treeName:t="sub.invisible_man_teaser_attack"
    }
  }
}

success{
  name:t="sub.invisible_man_teaser_try_forward_attack"

  sequencer{
    name:t="try_forward_attack"

    sequencer{
      findDanger{
        paramName:t="enemy"
        radiusParamName:t="enemyRadius"
        minDanger:r=0.1
        tag:t="human"
      }

      modifyNode{
        target:t="walker_agent__targetEid"
        operator:t="="
        argIntParam:t="enemy"
      }
    }

    checkDistanceToTarget{
      targetParam:t="walker_agent__targetEid"
      radius:r=2
    }

    not{
      checkInsideAnotherDimension{
        targetParam:t="walker_agent__targetEid"
      }
    }

    subTree{
      treeName:t="sub.invisible_man_teaser_attack"
    }
  }
}

success{
  name:t="sub.invisible_man_teaser_walk_around"

  sequencer{
    name:t="walk_around"

    nMeshFindRandomPointAroundTarget{
      posParam:t="walker_agent__targetPos"
      dist:p2=6, 14
      targetParam:t="eid"
    }

    subTree{
      treeName:t="sub.invisible_man_teaser_go_to_invisible_form"
    }

    parallel{
      nPhysCorridorMoveToPos{
        posParam:t="walker_agent__targetPos"
        forceToWalk:b=yes
        stopDist:r=1.5
      }

      wait{
        range:p2=4, 8
        resetable:b=yes
      }
    }

    success{
      sequencer{
        ignoreChance{
          chance:r=0.95
        }

        subTree{
          treeName:t="sub.invisible_man_teaser_go_to_visible_form"
        }

        wait{
          range:p2=0.25, 0.35
          resetable:b=yes
        }
      }
    }
  }
}

success{
  name:t="sub.invisible_man_teaser_run_around"

  sequencer{
    name:t="run_around"

    nMeshFindRandomPointAroundTarget{
      posParam:t="walker_agent__targetPos"
      dist:p2=6, 16
      targetParam:t="eid"
    }

    subTree{
      treeName:t="sub.invisible_man_teaser_go_to_invisible_form"
    }

    parallel{
      nPhysCorridorMoveToPos{
        posParam:t="walker_agent__targetPos"
        forceToWalk:b=no
        stopDist:r=1.5
      }

      wait{
        range:p2=4, 8
        resetable:b=yes
      }
    }
  }
}

success{
  name:t="sub.invisible_man_teaser_go_to_invisible_form"

  sequencer{
    name:t="go_to_invisible_form"

    compareNode{
      lhs:t="another_dimension_visitor__inside"
      operator:t="=="
      rhs:i=0
    }

    compareNode{
      lhs:t="invisible_man__anotherDimensionAvailable"
      operator:t="=="
      rhs:i=1
    }

    modifyNode{
      target:t="another_dimension_visitor__inside"
      operator:t="="
      arg:i=1
    }

    wait{
      range:p2=0.4, 0.45
      resetable:b=yes
    }
  }
}

success{
  name:t="sub.invisible_man_teaser_go_to_visible_form_fast"

  sequencer{
    name:t="go_to_visible_form_fast"

    compareNode{
      lhs:t="another_dimension_visitor__inside"
      operator:t="=="
      rhs:i=1
    }

    modifyNode{
      target:t="another_dimension_visitor__inside"
      operator:t="="
      arg:i=0
    }

    wait{
      range:p2=0.25, 0.3
      resetable:b=yes
    }
  }
}

success{
  name:t="sub.invisible_man_teaser_go_to_visible_form"

  sequencer{
    name:t="go_to_visible_form"

    subTree{
      treeName:t="sub.invisible_man_teaser_go_to_visible_form_fast"
    }

    modifyNode{
      target:t="util_vars__inShowState"
      operator:t="="
      arg:i=1
    }

    success{
      applyGameAffect{
        templateName:t="invisible_man_show_anim"
        duration:p2=2, 2
      }
    }

    modifyNode{
      target:t="util_vars__inShowState"
      operator:t="="
      arg:i=0
    }
  }
}

success{
  name:t="sub.invisible_man_teaser_vanish"

  sequencer{
    name:t="vanish"

    subTree{
      treeName:t="sub.invisible_man_teaser_go_to_invisible_form"
    }

    destroyEntity{}
  }
}
